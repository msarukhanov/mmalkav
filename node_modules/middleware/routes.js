/**
 * Created by mark on 11/12/2015.
 */
module.exports = function (app, fs) {
    app.get('/', function (req, res) {
        fs.readFile('./data/map.html', function (err, html) {
            if (err) {
                throw err;
            }
            res.writeHeader(200, {"Content-Type": "text/html"});
            res.write(html);
            res.end();
        });
    });
    app.get('/getFactions', function (req, res) {
        fs.readFile('./data/json/factions.json', 'utf8', function (err, data) {
            res.type('application/json');
            res.jsonp(JSON.parse(data));
        });
    });
    app.get('/getRegions', function (req, res) {
        fs.readFile('./data/json/regions.json', 'utf8', function (err, data) {
            res.type('application/json');
            res.jsonp(JSON.parse(data));
        });
    });
    app.get('/getCampaignInfo', function (req, res) {
        fs.readFile('./data/json/campaignInfo.json', 'utf8', function (err, data) {
            res.type('application/json');
            res.jsonp(JSON.parse(data));
        });
    });
    app.post('/setCampaignInfo', function (req, res) {
        fs.readFile('./data/json/campaignInfo.json', 'utf8', function (err, data) {
            var map = data;
            map = JSON.parse(map);
            map[req.body.id] = req.body.country;
            map = JSON.stringify(map, null, '\t');
            fs.writeFile('./data/json/campaignInfo.json', map, function (err, data) {
                if (err) {
                    console.log(err.message);
                    return;
                }
                else res.jsonp(JSON.parse(map));
            });
        });
    });
    app.post('/resetCampaignInfo', function (req, res) {
        fs.readFile('./data/default/campaignInfo.json', 'utf8', function (err, data) {
            var map = data;
            fs.writeFile('./data/json/campaignInfo.json', map, function (err, data) {
                if (err) {
                    console.log(err.message);
                    return;
                }
                else res.jsonp(JSON.parse(map));
            });
        });
    });
};